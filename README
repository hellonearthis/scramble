Data Compression. Scrambling.

This doesn’t compress, it scrambles a compressed file for the hope of better compression.
By having a reveseable function, the data could be organised into patterns that ‘could?’ be compressed again.

DATA COMPRESSION through randoimisation. I will test on the byte level before I segment on to the bit level.

My latest plan it to work on the data at the bit level, basic splitting the data into two file.
The split sequence is decided by a byte value. 
00000000 would split all the bits into Part 0
11111111 would split all the bits into Part 1
01010101 would split every other bit into Part 0 and Part 1

Using a byte as the split key I can have 255 pattern combinations. (well slightly less)

Current code was a byte level split, but I think I will get better results by working at the bit level.

My coding skills are not the bestest and writing it in PHP isn’t the fastest language, but I’m doing this to test a theory 
and to have some fun coding. It’s a simple idea and I’m sure there are greater minds that have thought of doing this,
But it’s for fun.

Update: It's basicly working, apart from not looping through to find the best scramble key and the display bug that only displays ascii characters.

But...

I have a small 32 byte file that I gzip which makes a 40 byte file
I pass the small 32 byte file through the scrambler and gzip again and
that makes a 32byte file Thats 8 bytes smaller, 20% more compressed.

That's without looping through every posible scramble key (1-255) looking for best.
   Time for more testing. 